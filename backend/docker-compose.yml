version: "3.3"
services:
  elixir-api:
    container_name: elixir-api
    build: ./timeapi
    environment:
      # - POSTGRES_USER=${POSTGRES_USER}
      # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      # - POSTGRES_DB=${POSTGRES_DB}
      # - POSTGRES_HOST=${POSTGRES_HOST}
      # - POSTGRES_PORT=${POSTGRES_PORT}
      # - PGHOST=api-db
      - PHX_HOST="0.0.0.0"
    ports:
      - 4000:4000
    volumes:
      - ./timeapi:/app
      - ./timeapi/deps:/elixir_api/deps
      - ./timeapi/_build:/elixir_api/_build
    depends_on:
      - api-db
    networks:
      - backend

  api-db:
    container_name: api-db
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    # ports:
    #   - ${POSTGRES_PORT}:5432
    networks:
      - backend

  front:
    container_name: front
    build:
      context: ./Projet-Piscine
    volumes:
      - '.:/app'
      - '/app/node_modules'
    ports:
      - '8080:8080'
    depends_on:
      - api-db
    networks:
      - backend

networks:
  backend: